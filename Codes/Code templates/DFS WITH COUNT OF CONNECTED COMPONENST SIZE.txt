#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define mod 1000000007
vector<int> adj[200001];
int vis[200001];

void dfs(int node,int par,int &dis)
{
    vis[node]=1;
    dis++;
    for(auto x:adj[node]){
        if(vis[x]==0&& x!=par){
            dfs(x,node,dis);
        }
    }
}
void solve()
{
    ll n;
    cin >> n;
    int arr[n];
    for (ll i = 0; i < n; i++)
    {
        cin >> arr[i];
    }
    vector<pair<int, int>> v;
    set<int> s;
    for (int i = 0; i < n / 2; i++)
    {
        if (arr[i] != arr[n - i - 1])
        {
            v.push_back({arr[i], arr[n - 1 - i]});
            s.insert(arr[i]);
            s.insert(arr[n - 1 - i]);
        }
    }
    if (v.size() == 0)
    {
        cout << "0" << endl;
        return;
    }
    for (auto x : v)
    {
        adj[x.first].push_back(x.second);
        adj[x.second].push_back(x.first);
    }
    int ans=0;
    for(auto i:s){
        if(!vis[i]){
            int d=0;
            dfs(i,0,d);
            ans+=max(0,d-1);
        }
    }
    cout<<ans<<endl;
}
int main()
{
    ll test = 1;
    //cin>>test;
    while (test--)
    {
        solve();
    }
    return 0;
}
