#include<bits/stdc++.h>
using namespace std;
vector<int> parents;
vector<int> ranks;
int find (int a)
{
    if(parents[a]==-1)
    {
        return a;
    }
    parents[a]=find(parents[a]);
    return parents[a];
}
void union_set(int a,int b)
{
    int s1=find(a);
    int s2=find(b);
    if(s1!=s2)
    {
        if(ranks[s1]>ranks[s2])
        {
            parents[s2]=s1;
            ranks[s1]+=ranks[s2];
        }
        else
        {
            parents[s1]=s2;
            ranks[s2]+=ranks[s1];
        }
    }
}
int n,m;
int main()
{
    cin>>n>>m;
    ranks.resize(n,1);
    parents.resize(n,-1);
    for(int i=0;i<m;i++)
    {
        int k;
        cin>>k;
        vector<int> friends(k);
        for(int i=0;i<k;i++)
        {
            int a;
            cin>>a;
            a--;
            friends[i]=a;
        }
        for(int i=0;i<k-1;i++)
        {
            int a=friends[i];
            int b=friends[i+1];
            union_set(a,b);
        }
    }
    for(int i=0;i<n;i++)
    {
        cout<<ranks[find(i)]<<" ";
    }
}