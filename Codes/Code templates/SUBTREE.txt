#include<bits/stdc++.h>
#define REP(i,n) for (int i = 1; i <= n; i++)
#define mod 1000000007
#define pb push_back
#define ff first
#define ss second
#define ii pair<int,int>
#define vi vector<int>
#define vii vector<ii>
#define lli long long int
#define INF 1000000000
#define endl '\n'
const double PI = 3.141592653589793238460;
typedef std::complex<double> Complex;
typedef std::valarray<Complex> CArray;
using namespace std;

vi tree[100001];
int sub[100001];

void dfs(int node , int par)
{
	sub[node] = 1;
	
	for(int child : tree[node])
	if(child != par)
	{
		dfs(child , node);
		sub[node] += sub[child];
	}
	
}

int main()
{
	int n , a , b;
	cin>>n;
	
	REP(i , n-1) cin>>a>>b , tree[a].pb(b) , tree[b].pb(a);
	
	dfs(1 , -1);
	
	REP(i , n) cout<<"Node "<<i<<" Sub["<<i<<"] = "<<sub[i]<<endl;
}

