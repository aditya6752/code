CALCULATION OF SUMM IN THE GIVEN RANGE IH THE HELP OF SEGMENT TREEE


#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define mod 1000000007
vector<ll> tree;
ll f(ll node,ll node_low,ll node_high,ll query_low,ll query_high){
    if(query_low<=node_low&&node_high<=query_high){
        return tree[node];
    }
    if(node_high<query_low||query_high<node_low){
        return 0;
    }
    ll last_in_left=(node_low+node_high)/2;
    return f(2*node,node_low,last_in_left,query_low,query_high)+
         + f(2*node+1,last_in_left + 1, node_high,query_low,query_high);
}
int main(){
    ll n,q;
    cin>>n>>q;
    vector<ll> a(n);
    for(ll i=0;i<n;i++)
    {
        cin>>a[i];
    }
    while(__builtin_popcount(n)!=1)
    {
        a.push_back(0);
        n++;
    }
    tree.resize(2*n);
    for(ll i=0;i<n;i++)
    {
        tree[n+i]=a[i];
    }
    for(int i=n-1;i>=1;i--){
        tree[i]=tree[2*i]+tree[2*i+1];
    }

    for(ll i=0;i<q;i++){
        ll low,high;
        cin>>low>>high;
        low--;
        high--;
        cout<<f(1,0,n-1,low,high)<<"\n";
    }
    return 0;
}
